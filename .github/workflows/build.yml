name: Build
on:
  push:
    paths-ignore:
      - '*.pdf'
  pull_request:
    branches:
      - master
defaults: 
  run:
    shell: bash
jobs:
  build_latex:
    runs-on: ubuntu-latest
    container:
      image: danteev/texlive:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Python
      uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        python3 --version
        echo "installing pip"
        python3 -m pip install --user --upgrade pip requests  
        which pip
        which pip3
    - name: Build LaTeX
      run: |
        dir_to_compile=( $(python .github/workflows/get_directory_to_compile.py ${{ github.repository }} ${{github['event']['number']}} ) ) 
        echo "dir to compile value $dir_to_compile"
        for dir in $dir_to_compile; do
          cd $PWD/$dir
          enonce="Compile_${dir}_ENONCE"
          solution="Compile_${dir}_ENONCE_SOLUTION"
          latexmk -synctex=1 -interaction=nonstopmode -file-line-error -pdf -outdir=. $enonce;
          latexmk -synctex=1 -interaction=nonstopmode -file-line-error -pdf -outdir=. $solution;
          cd ..
        done
  check_file_metadata:
    runs-on: ubuntu-latest
    container:
      image: danteev/texlive:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      #with:
      #  extra_system_packages: texlive-latex-extra
    - name: Check Metadata
      run: |
        echo $SHELL
        ls
        declare -a table_file_name
        declare -a table_metadata
        for dir in $(ls); do
          if [ ! -d "$dir" ]; then continue; fi;
          if [ "$dir" = "cartouche" ]; then continue; fi;
          cd $PWD/$dir
          table_file_name+=( "$dir" );
          if [ ! -e ${dir}.json ]; then  table_metadata+=( false ); 
          else table_metadata+=( true ); fi;
          cd ..
        done
        declare -a missing_metadata_files
        declare -a existing_metadata_files
        for index in "${!table_metadata[@]}"; do
          if ! ${table_metadata[$index]}; then missing_metadata_file+=( "${table_file_name[$index]}" ); 
          else existing_metadata_files+=( "${table_file_name[$index]}" )
          fi
        done
        echo "missing data" + ${missing_metadata_file[@]}
        echo "github sha"+ ${{ github.sha }}
        echo "repository " ${{ github.repository }}
        echo "git run id" ${{github.run_id}}
        echo "head sha " ${{ github.event.pull_request.head.sha }}
        echo "GITHUB sha" $GITHUB_SHA
        commit_sha=${{ github.event.pull_request.head.sha }}
        if [ -z "${commit_sha}" ]; then commit_sha=${{ github.sha }}; fi;
        file_to_charge=$(printf ",%s" "${missing_metadata_file[@]}")
        if (( ${#missing_metadata_file[@]} > 0 )); then 
          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/commits/${commit_sha}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --data '{
              "body": "Missing metadata files : $file_to_charge "
            }'; echo "curl request executed"; exit 1; 
        else 
          curl_request='curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/'${commit_sha}' --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"  --data "{
              \"context\": \"Build / check_file_metadata\",
              \"state\": \"success\",
              \"description\": \"All metadata exist\",
              \"target_url\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
            }" '; echo "$curl_request"; $curl_request; fi
        
